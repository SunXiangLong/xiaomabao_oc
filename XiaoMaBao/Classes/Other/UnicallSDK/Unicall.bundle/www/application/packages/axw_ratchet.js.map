{"version":3,"sources":["meteor://ðŸ’»app/packages/axw_ratchet/packages/axw_ratchet.js"],"names":[],"mappingsfile":"/packages/axw_ratchet.js","sourcesContent":["(function () {\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/axw:ratchet/ratchet-2/js/ratchet.js                                                                       //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/*!                                                                                                                   // 1\n * =====================================================                                                              // 2\n * Ratchet v2.0.2 (http://goratchet.com)                                                                              // 3\n * Copyright 2014 Connor Sears                                                                                        // 4\n * Licensed under MIT (https://github.com/twbs/ratchet/blob/master/LICENSE)                                           // 5\n *                                                                                                                    // 6\n * v2.0.2 designed by @connors.                                                                                       // 7\n * =====================================================                                                              // 8\n */                                                                                                                   // 9\n/* ========================================================================                                           // 10\n * Ratchet: modals.js v2.0.2                                                                                          // 11\n * http://goratchet.com/components#modals                                                                             // 12\n * ========================================================================                                           // 13\n * Copyright 2014 Connor Sears                                                                                        // 14\n * Licensed under MIT (https://github.com/twbs/ratchet/blob/master/LICENSE)                                           // 15\n * ======================================================================== */                                        // 16\n                                                                                                                      // 17\n!(function () {                                                                                                       // 18\n  'use strict';                                                                                                       // 19\n                                                                                                                      // 20\n  var findModals = function (target) {                                                                                // 21\n    var i;                                                                                                            // 22\n    var modals = document.querySelectorAll('a');                                                                      // 23\n                                                                                                                      // 24\n    for (; target && target !== document; target = target.parentNode) {                                               // 25\n      for (i = modals.length; i--;) {                                                                                 // 26\n        if (modals[i] === target) {                                                                                   // 27\n          return target;                                                                                              // 28\n        }                                                                                                             // 29\n      }                                                                                                               // 30\n    }                                                                                                                 // 31\n  };                                                                                                                  // 32\n                                                                                                                      // 33\n  var getModal = function (event) {                                                                                   // 34\n    var modalToggle = findModals(event.target);                                                                       // 35\n    if (modalToggle && modalToggle.hash) {                                                                            // 36\n      return document.querySelector(modalToggle.hash);                                                                // 37\n    }                                                                                                                 // 38\n  };                                                                                                                  // 39\n                                                                                                                      // 40\n  window.addEventListener('touchend', function (event) {                                                              // 41\n    var modal = getModal(event);                                                                                      // 42\n    if (modal) {                                                                                                      // 43\n      if (modal && modal.classList.contains('modal')) {                                                               // 44\n        modal.classList.toggle('active');                                                                             // 45\n      }                                                                                                               // 46\n      event.preventDefault(); // prevents rewriting url (apps can still use hash values in url)                       // 47\n    }                                                                                                                 // 48\n  });                                                                                                                 // 49\n}());                                                                                                                 // 50\n                                                                                                                      // 51\n/* ========================================================================                                           // 52\n * Ratchet: popovers.js v2.0.2                                                                                        // 53\n * http://goratchet.com/components#popovers                                                                           // 54\n * ========================================================================                                           // 55\n * Copyright 2014 Connor Sears                                                                                        // 56\n * Licensed under MIT (https://github.com/twbs/ratchet/blob/master/LICENSE)                                           // 57\n * ======================================================================== */                                        // 58\n                                                                                                                      // 59\n!(function () {                                                                                                       // 60\n  'use strict';                                                                                                       // 61\n                                                                                                                      // 62\n  var popover;                                                                                                        // 63\n                                                                                                                      // 64\n  var findPopovers = function (target) {                                                                              // 65\n    var i;                                                                                                            // 66\n    var popovers = document.querySelectorAll('a');                                                                    // 67\n                                                                                                                      // 68\n    for (; target && target !== document; target = target.parentNode) {                                               // 69\n      for (i = popovers.length; i--;) {                                                                               // 70\n        if (popovers[i] === target) {                                                                                 // 71\n          return target;                                                                                              // 72\n        }                                                                                                             // 73\n      }                                                                                                               // 74\n    }                                                                                                                 // 75\n  };                                                                                                                  // 76\n                                                                                                                      // 77\n  var onPopoverHidden = function () {                                                                                 // 78\n    popover.style.display = 'none';                                                                                   // 79\n    popover.removeEventListener('webkitTransitionEnd', onPopoverHidden);                                              // 80\n  };                                                                                                                  // 81\n                                                                                                                      // 82\n  var backdrop = (function () {                                                                                       // 83\n    var element = document.createElement('div');                                                                      // 84\n                                                                                                                      // 85\n    element.classList.add('backdrop');                                                                                // 86\n                                                                                                                      // 87\n    element.addEventListener('touchend', function () {                                                                // 88\n      popover.addEventListener('webkitTransitionEnd', onPopoverHidden);                                               // 89\n      popover.classList.remove('visible');                                                                            // 90\n      popover.parentNode.removeChild(backdrop);                                                                       // 91\n    });                                                                                                               // 92\n                                                                                                                      // 93\n    return element;                                                                                                   // 94\n  }());                                                                                                               // 95\n                                                                                                                      // 96\n  var getPopover = function (e) {                                                                                     // 97\n    var anchor = findPopovers(e.target);                                                                              // 98\n                                                                                                                      // 99\n    if (!anchor || !anchor.hash || (anchor.hash.indexOf('/') > 0)) {                                                  // 100\n      return;                                                                                                         // 101\n    }                                                                                                                 // 102\n                                                                                                                      // 103\n    try {                                                                                                             // 104\n      popover = document.querySelector(anchor.hash);                                                                  // 105\n    }                                                                                                                 // 106\n    catch (error) {                                                                                                   // 107\n      popover = null;                                                                                                 // 108\n    }                                                                                                                 // 109\n                                                                                                                      // 110\n    if (popover === null) {                                                                                           // 111\n      return;                                                                                                         // 112\n    }                                                                                                                 // 113\n                                                                                                                      // 114\n    if (!popover || !popover.classList.contains('popover')) {                                                         // 115\n      return;                                                                                                         // 116\n    }                                                                                                                 // 117\n                                                                                                                      // 118\n    return popover;                                                                                                   // 119\n  };                                                                                                                  // 120\n                                                                                                                      // 121\n  var showHidePopover = function (e) {                                                                                // 122\n    var popover = getPopover(e);                                                                                      // 123\n                                                                                                                      // 124\n    if (!popover) {                                                                                                   // 125\n      return;                                                                                                         // 126\n    }                                                                                                                 // 127\n                                                                                                                      // 128\n    popover.style.display = 'block';                                                                                  // 129\n    popover.offsetHeight;                                                                                             // 130\n    popover.classList.add('visible');                                                                                 // 131\n                                                                                                                      // 132\n    popover.parentNode.appendChild(backdrop);                                                                         // 133\n  };                                                                                                                  // 134\n                                                                                                                      // 135\n  window.addEventListener('touchend', showHidePopover);                                                               // 136\n                                                                                                                      // 137\n}());                                                                                                                 // 138\n                                                                                                                      // 139\n/* ========================================================================                                           // 140\n * Ratchet: push.js v2.0.2                                                                                            // 141\n * http://goratchet.com/components#push                                                                               // 142\n * ========================================================================                                           // 143\n * inspired by @defunkt's jquery.pjax.js                                                                              // 144\n * Copyright 2014 Connor Sears                                                                                        // 145\n * Licensed under MIT (https://github.com/twbs/ratchet/blob/master/LICENSE)                                           // 146\n * ======================================================================== */                                        // 147\n                                                                                                                      // 148\n/* global _gaq: true */                                                                                               // 149\n                                                                                                                      // 150\n!(function () {                                                                                                       // 151\n  'use strict';                                                                                                       // 152\n                                                                                                                      // 153\n  var noop = function () {};                                                                                          // 154\n                                                                                                                      // 155\n                                                                                                                      // 156\n  // Pushstate caching                                                                                                // 157\n  // ==================                                                                                               // 158\n                                                                                                                      // 159\n  var isScrolling;                                                                                                    // 160\n  var maxCacheLength = 20;                                                                                            // 161\n  var cacheMapping   = sessionStorage;                                                                                // 162\n  var domCache       = {};                                                                                            // 163\n  var transitionMap  = {                                                                                              // 164\n    slideIn  : 'slide-out',                                                                                           // 165\n    slideOut : 'slide-in',                                                                                            // 166\n    fade     : 'fade'                                                                                                 // 167\n  };                                                                                                                  // 168\n                                                                                                                      // 169\n  var bars = {                                                                                                        // 170\n    bartab             : '.bar-tab',                                                                                  // 171\n    barnav             : '.bar-nav',                                                                                  // 172\n    barfooter          : '.bar-footer',                                                                               // 173\n    barheadersecondary : '.bar-header-secondary'                                                                      // 174\n  };                                                                                                                  // 175\n                                                                                                                      // 176\n  var cacheReplace = function (data, updates) {                                                                       // 177\n    PUSH.id = data.id;                                                                                                // 178\n    if (updates) {                                                                                                    // 179\n      data = getCached(data.id);                                                                                      // 180\n    }                                                                                                                 // 181\n    cacheMapping[data.id] = JSON.stringify(data);                                                                     // 182\n    window.history.replaceState(data.id, data.title, data.url);                                                       // 183\n    domCache[data.id] = document.body.cloneNode(true);                                                                // 184\n  };                                                                                                                  // 185\n                                                                                                                      // 186\n  var cachePush = function () {                                                                                       // 187\n    var id = PUSH.id;                                                                                                 // 188\n                                                                                                                      // 189\n    var cacheForwardStack = JSON.parse(cacheMapping.cacheForwardStack || '[]');                                       // 190\n    var cacheBackStack    = JSON.parse(cacheMapping.cacheBackStack    || '[]');                                       // 191\n                                                                                                                      // 192\n    cacheBackStack.push(id);                                                                                          // 193\n                                                                                                                      // 194\n    while (cacheForwardStack.length) {                                                                                // 195\n      delete cacheMapping[cacheForwardStack.shift()];                                                                 // 196\n    }                                                                                                                 // 197\n    while (cacheBackStack.length > maxCacheLength) {                                                                  // 198\n      delete cacheMapping[cacheBackStack.shift()];                                                                    // 199\n    }                                                                                                                 // 200\n                                                                                                                      // 201\n    window.history.pushState(null, '', cacheMapping[PUSH.id].url);                                                    // 202\n                                                                                                                      // 203\n    cacheMapping.cacheForwardStack = JSON.stringify(cacheForwardStack);                                               // 204\n    cacheMapping.cacheBackStack    = JSON.stringify(cacheBackStack);                                                  // 205\n  };                                                                                                                  // 206\n                                                                                                                      // 207\n  var cachePop = function (id, direction) {                                                                           // 208\n    var forward           = direction === 'forward';                                                                  // 209\n    var cacheForwardStack = JSON.parse(cacheMapping.cacheForwardStack || '[]');                                       // 210\n    var cacheBackStack    = JSON.parse(cacheMapping.cacheBackStack    || '[]');                                       // 211\n    var pushStack         = forward ? cacheBackStack    : cacheForwardStack;                                          // 212\n    var popStack          = forward ? cacheForwardStack : cacheBackStack;                                             // 213\n                                                                                                                      // 214\n    if (PUSH.id) {                                                                                                    // 215\n      pushStack.push(PUSH.id);                                                                                        // 216\n    }                                                                                                                 // 217\n    popStack.pop();                                                                                                   // 218\n                                                                                                                      // 219\n    cacheMapping.cacheForwardStack = JSON.stringify(cacheForwardStack);                                               // 220\n    cacheMapping.cacheBackStack    = JSON.stringify(cacheBackStack);                                                  // 221\n  };                                                                                                                  // 222\n                                                                                                                      // 223\n  var getCached = function (id) {                                                                                     // 224\n    return JSON.parse(cacheMapping[id] || null) || {};                                                                // 225\n  };                                                                                                                  // 226\n                                                                                                                      // 227\n  var getTarget = function (e) {                                                                                      // 228\n    var target = findTarget(e.target);                                                                                // 229\n                                                                                                                      // 230\n    if (!target ||                                                                                                    // 231\n        e.which > 1 ||                                                                                                // 232\n        e.metaKey ||                                                                                                  // 233\n        e.ctrlKey ||                                                                                                  // 234\n        isScrolling ||                                                                                                // 235\n        location.protocol !== target.protocol ||                                                                      // 236\n        location.host     !== target.host ||                                                                          // 237\n        !target.hash && /#/.test(target.href) ||                                                                      // 238\n        target.hash && target.href.replace(target.hash, '') === location.href.replace(location.hash, '') ||           // 239\n        target.getAttribute('data-ignore') === 'push') { return; }                                                    // 240\n                                                                                                                      // 241\n    return target;                                                                                                    // 242\n  };                                                                                                                  // 243\n                                                                                                                      // 244\n                                                                                                                      // 245\n  // Main event handlers (touchend, popstate)                                                                         // 246\n  // ==========================================                                                                       // 247\n                                                                                                                      // 248\n  var touchend = function (e) {                                                                                       // 249\n    var target = getTarget(e);                                                                                        // 250\n                                                                                                                      // 251\n    if (!target) {                                                                                                    // 252\n      return;                                                                                                         // 253\n    }                                                                                                                 // 254\n                                                                                                                      // 255\n    e.preventDefault();                                                                                               // 256\n                                                                                                                      // 257\n    PUSH({                                                                                                            // 258\n      url        : target.href,                                                                                       // 259\n      hash       : target.hash,                                                                                       // 260\n      timeout    : target.getAttribute('data-timeout'),                                                               // 261\n      transition : target.getAttribute('data-transition')                                                             // 262\n    });                                                                                                               // 263\n  };                                                                                                                  // 264\n                                                                                                                      // 265\n  var popstate = function (e) {                                                                                       // 266\n    var key;                                                                                                          // 267\n    var barElement;                                                                                                   // 268\n    var activeObj;                                                                                                    // 269\n    var activeDom;                                                                                                    // 270\n    var direction;                                                                                                    // 271\n    var transition;                                                                                                   // 272\n    var transitionFrom;                                                                                               // 273\n    var transitionFromObj;                                                                                            // 274\n    var id = e.state;                                                                                                 // 275\n                                                                                                                      // 276\n    if (!id || !cacheMapping[id]) {                                                                                   // 277\n      return;                                                                                                         // 278\n    }                                                                                                                 // 279\n                                                                                                                      // 280\n    direction = PUSH.id < id ? 'forward' : 'back';                                                                    // 281\n                                                                                                                      // 282\n    cachePop(id, direction);                                                                                          // 283\n                                                                                                                      // 284\n    activeObj = getCached(id);                                                                                        // 285\n    activeDom = domCache[id];                                                                                         // 286\n                                                                                                                      // 287\n    if (activeObj.title) {                                                                                            // 288\n      document.title = activeObj.title;                                                                               // 289\n    }                                                                                                                 // 290\n                                                                                                                      // 291\n    if (direction === 'back') {                                                                                       // 292\n      transitionFrom    = JSON.parse(direction === 'back' ? cacheMapping.cacheForwardStack : cacheMapping.cacheBackStack);\n      transitionFromObj = getCached(transitionFrom[transitionFrom.length - 1]);                                       // 294\n    } else {                                                                                                          // 295\n      transitionFromObj = activeObj;                                                                                  // 296\n    }                                                                                                                 // 297\n                                                                                                                      // 298\n    if (direction === 'back' && !transitionFromObj.id) {                                                              // 299\n      return (PUSH.id = id);                                                                                          // 300\n    }                                                                                                                 // 301\n                                                                                                                      // 302\n    transition = direction === 'back' ? transitionMap[transitionFromObj.transition] : transitionFromObj.transition;   // 303\n                                                                                                                      // 304\n    if (!activeDom) {                                                                                                 // 305\n      return PUSH({                                                                                                   // 306\n        id         : activeObj.id,                                                                                    // 307\n        url        : activeObj.url,                                                                                   // 308\n        title      : activeObj.title,                                                                                 // 309\n        timeout    : activeObj.timeout,                                                                               // 310\n        transition : transition,                                                                                      // 311\n        ignorePush : true                                                                                             // 312\n      });                                                                                                             // 313\n    }                                                                                                                 // 314\n                                                                                                                      // 315\n    if (transitionFromObj.transition) {                                                                               // 316\n      activeObj = extendWithDom(activeObj, '.content', activeDom.cloneNode(true));                                    // 317\n      for (key in bars) {                                                                                             // 318\n        if (bars.hasOwnProperty(key)) {                                                                               // 319\n          barElement = document.querySelector(bars[key]);                                                             // 320\n          if (activeObj[key]) {                                                                                       // 321\n            swapContent(activeObj[key], barElement);                                                                  // 322\n          } else if (barElement) {                                                                                    // 323\n            barElement.parentNode.removeChild(barElement);                                                            // 324\n          }                                                                                                           // 325\n        }                                                                                                             // 326\n      }                                                                                                               // 327\n    }                                                                                                                 // 328\n                                                                                                                      // 329\n    swapContent(                                                                                                      // 330\n      (activeObj.contents || activeDom).cloneNode(true),                                                              // 331\n      document.querySelector('.content'),                                                                             // 332\n      transition                                                                                                      // 333\n    );                                                                                                                // 334\n                                                                                                                      // 335\n    PUSH.id = id;                                                                                                     // 336\n                                                                                                                      // 337\n    document.body.offsetHeight; // force reflow to prevent scroll                                                     // 338\n  };                                                                                                                  // 339\n                                                                                                                      // 340\n                                                                                                                      // 341\n  // Core PUSH functionality                                                                                          // 342\n  // =======================                                                                                          // 343\n                                                                                                                      // 344\n  var PUSH = function (options) {                                                                                     // 345\n    var key;                                                                                                          // 346\n    var xhr = PUSH.xhr;                                                                                               // 347\n                                                                                                                      // 348\n    options.container = options.container || options.transition ? document.querySelector('.content') : document.body; // 349\n                                                                                                                      // 350\n    for (key in bars) {                                                                                               // 351\n      if (bars.hasOwnProperty(key)) {                                                                                 // 352\n        options[key] = options[key] || document.querySelector(bars[key]);                                             // 353\n      }                                                                                                               // 354\n    }                                                                                                                 // 355\n                                                                                                                      // 356\n    if (xhr && xhr.readyState < 4) {                                                                                  // 357\n      xhr.onreadystatechange = noop;                                                                                  // 358\n      xhr.abort();                                                                                                    // 359\n    }                                                                                                                 // 360\n                                                                                                                      // 361\n    xhr = new XMLHttpRequest();                                                                                       // 362\n    xhr.open('GET', options.url, true);                                                                               // 363\n    xhr.setRequestHeader('X-PUSH', 'true');                                                                           // 364\n                                                                                                                      // 365\n    xhr.onreadystatechange = function () {                                                                            // 366\n      if (options._timeout) {                                                                                         // 367\n        clearTimeout(options._timeout);                                                                               // 368\n      }                                                                                                               // 369\n      if (xhr.readyState === 4) {                                                                                     // 370\n        xhr.status === 200 ? success(xhr, options) : failure(options.url);                                            // 371\n      }                                                                                                               // 372\n    };                                                                                                                // 373\n                                                                                                                      // 374\n    if (!PUSH.id) {                                                                                                   // 375\n      cacheReplace({                                                                                                  // 376\n        id         : +new Date(),                                                                                     // 377\n        url        : window.location.href,                                                                            // 378\n        title      : document.title,                                                                                  // 379\n        timeout    : options.timeout,                                                                                 // 380\n        transition : null                                                                                             // 381\n      });                                                                                                             // 382\n    }                                                                                                                 // 383\n                                                                                                                      // 384\n    if (options.timeout) {                                                                                            // 385\n      options._timeout = setTimeout(function () {  xhr.abort('timeout'); }, options.timeout);                         // 386\n    }                                                                                                                 // 387\n                                                                                                                      // 388\n    xhr.send();                                                                                                       // 389\n                                                                                                                      // 390\n    if (xhr.readyState && !options.ignorePush) {                                                                      // 391\n      cachePush();                                                                                                    // 392\n    }                                                                                                                 // 393\n  };                                                                                                                  // 394\n                                                                                                                      // 395\n                                                                                                                      // 396\n  // Main XHR handlers                                                                                                // 397\n  // =================                                                                                                // 398\n                                                                                                                      // 399\n  var success = function (xhr, options) {                                                                             // 400\n    var key;                                                                                                          // 401\n    var barElement;                                                                                                   // 402\n    var data = parseXHR(xhr, options);                                                                                // 403\n                                                                                                                      // 404\n    if (!data.contents) {                                                                                             // 405\n      return locationReplace(options.url);                                                                            // 406\n    }                                                                                                                 // 407\n                                                                                                                      // 408\n    if (data.title) {                                                                                                 // 409\n      document.title = data.title;                                                                                    // 410\n    }                                                                                                                 // 411\n                                                                                                                      // 412\n    if (options.transition) {                                                                                         // 413\n      for (key in bars) {                                                                                             // 414\n        if (bars.hasOwnProperty(key)) {                                                                               // 415\n          barElement = document.querySelector(bars[key]);                                                             // 416\n          if (data[key]) {                                                                                            // 417\n            swapContent(data[key], barElement);                                                                       // 418\n          } else if (barElement) {                                                                                    // 419\n            barElement.parentNode.removeChild(barElement);                                                            // 420\n          }                                                                                                           // 421\n        }                                                                                                             // 422\n      }                                                                                                               // 423\n    }                                                                                                                 // 424\n                                                                                                                      // 425\n    swapContent(data.contents, options.container, options.transition, function () {                                   // 426\n      cacheReplace({                                                                                                  // 427\n        id         : options.id || +new Date(),                                                                       // 428\n        url        : data.url,                                                                                        // 429\n        title      : data.title,                                                                                      // 430\n        timeout    : options.timeout,                                                                                 // 431\n        transition : options.transition                                                                               // 432\n      }, options.id);                                                                                                 // 433\n      triggerStateChange();                                                                                           // 434\n    });                                                                                                               // 435\n                                                                                                                      // 436\n    if (!options.ignorePush && window._gaq) {                                                                         // 437\n      _gaq.push(['_trackPageview']); // google analytics                                                              // 438\n    }                                                                                                                 // 439\n    if (!options.hash) {                                                                                              // 440\n      return;                                                                                                         // 441\n    }                                                                                                                 // 442\n  };                                                                                                                  // 443\n                                                                                                                      // 444\n  var failure = function (url) {                                                                                      // 445\n    throw new Error('Could not get: ' + url);                                                                         // 446\n  };                                                                                                                  // 447\n                                                                                                                      // 448\n                                                                                                                      // 449\n  // PUSH helpers                                                                                                     // 450\n  // ============                                                                                                     // 451\n                                                                                                                      // 452\n  var swapContent = function (swap, container, transition, complete) {                                                // 453\n    var enter;                                                                                                        // 454\n    var containerDirection;                                                                                           // 455\n    var swapDirection;                                                                                                // 456\n                                                                                                                      // 457\n    if (!transition) {                                                                                                // 458\n      if (container) {                                                                                                // 459\n        container.innerHTML = swap.innerHTML;                                                                         // 460\n      } else if (swap.classList.contains('content')) {                                                                // 461\n        document.body.appendChild(swap);                                                                              // 462\n      } else {                                                                                                        // 463\n        document.body.insertBefore(swap, document.querySelector('.content'));                                         // 464\n      }                                                                                                               // 465\n    } else {                                                                                                          // 466\n      enter  = /in$/.test(transition);                                                                                // 467\n                                                                                                                      // 468\n      if (transition === 'fade') {                                                                                    // 469\n        container.classList.add('in');                                                                                // 470\n        container.classList.add('fade');                                                                              // 471\n        swap.classList.add('fade');                                                                                   // 472\n      }                                                                                                               // 473\n                                                                                                                      // 474\n      if (/slide/.test(transition)) {                                                                                 // 475\n        swap.classList.add('sliding-in', enter ? 'right' : 'left');                                                   // 476\n        swap.classList.add('sliding');                                                                                // 477\n        container.classList.add('sliding');                                                                           // 478\n      }                                                                                                               // 479\n                                                                                                                      // 480\n      container.parentNode.insertBefore(swap, container);                                                             // 481\n    }                                                                                                                 // 482\n                                                                                                                      // 483\n    if (!transition) {                                                                                                // 484\n      complete && complete();                                                                                         // 485\n    }                                                                                                                 // 486\n                                                                                                                      // 487\n    if (transition === 'fade') {                                                                                      // 488\n      container.offsetWidth; // force reflow                                                                          // 489\n      container.classList.remove('in');                                                                               // 490\n      var fadeContainerEnd = function () {                                                                            // 491\n        container.removeEventListener('webkitTransitionEnd', fadeContainerEnd);                                       // 492\n        swap.classList.add('in');                                                                                     // 493\n        swap.addEventListener('webkitTransitionEnd', fadeSwapEnd);                                                    // 494\n      };                                                                                                              // 495\n      var fadeSwapEnd = function () {                                                                                 // 496\n        swap.removeEventListener('webkitTransitionEnd', fadeSwapEnd);                                                 // 497\n        container.parentNode.removeChild(container);                                                                  // 498\n        swap.classList.remove('fade');                                                                                // 499\n        swap.classList.remove('in');                                                                                  // 500\n        complete && complete();                                                                                       // 501\n      };                                                                                                              // 502\n      container.addEventListener('webkitTransitionEnd', fadeContainerEnd);                                            // 503\n                                                                                                                      // 504\n    }                                                                                                                 // 505\n                                                                                                                      // 506\n    if (/slide/.test(transition)) {                                                                                   // 507\n      var slideEnd = function () {                                                                                    // 508\n        swap.removeEventListener('webkitTransitionEnd', slideEnd);                                                    // 509\n        swap.classList.remove('sliding', 'sliding-in');                                                               // 510\n        swap.classList.remove(swapDirection);                                                                         // 511\n        container.parentNode.removeChild(container);                                                                  // 512\n        complete && complete();                                                                                       // 513\n      };                                                                                                              // 514\n                                                                                                                      // 515\n      container.offsetWidth; // force reflow                                                                          // 516\n      swapDirection      = enter ? 'right' : 'left';                                                                  // 517\n      containerDirection = enter ? 'left' : 'right';                                                                  // 518\n      container.classList.add(containerDirection);                                                                    // 519\n      swap.classList.remove(swapDirection);                                                                           // 520\n      swap.addEventListener('webkitTransitionEnd', slideEnd);                                                         // 521\n    }                                                                                                                 // 522\n  };                                                                                                                  // 523\n                                                                                                                      // 524\n  var triggerStateChange = function () {                                                                              // 525\n    var e = new CustomEvent('push', {                                                                                 // 526\n      detail: { state: getCached(PUSH.id) },                                                                          // 527\n      bubbles: true,                                                                                                  // 528\n      cancelable: true                                                                                                // 529\n    });                                                                                                               // 530\n                                                                                                                      // 531\n    window.dispatchEvent(e);                                                                                          // 532\n  };                                                                                                                  // 533\n                                                                                                                      // 534\n  var findTarget = function (target) {                                                                                // 535\n    var i;                                                                                                            // 536\n    var toggles = document.querySelectorAll('a');                                                                     // 537\n                                                                                                                      // 538\n    for (; target && target !== document; target = target.parentNode) {                                               // 539\n      for (i = toggles.length; i--;) {                                                                                // 540\n        if (toggles[i] === target) {                                                                                  // 541\n          return target;                                                                                              // 542\n        }                                                                                                             // 543\n      }                                                                                                               // 544\n    }                                                                                                                 // 545\n  };                                                                                                                  // 546\n                                                                                                                      // 547\n  var locationReplace = function (url) {                                                                              // 548\n    window.history.replaceState(null, '', '#');                                                                       // 549\n    window.location.replace(url);                                                                                     // 550\n  };                                                                                                                  // 551\n                                                                                                                      // 552\n  var extendWithDom = function (obj, fragment, dom) {                                                                 // 553\n    var i;                                                                                                            // 554\n    var result = {};                                                                                                  // 555\n                                                                                                                      // 556\n    for (i in obj) {                                                                                                  // 557\n      if (obj.hasOwnProperty(i)) {                                                                                    // 558\n        result[i] = obj[i];                                                                                           // 559\n      }                                                                                                               // 560\n    }                                                                                                                 // 561\n                                                                                                                      // 562\n    Object.keys(bars).forEach(function (key) {                                                                        // 563\n      var el = dom.querySelector(bars[key]);                                                                          // 564\n      if (el) {                                                                                                       // 565\n        el.parentNode.removeChild(el);                                                                                // 566\n      }                                                                                                               // 567\n      result[key] = el;                                                                                               // 568\n    });                                                                                                               // 569\n                                                                                                                      // 570\n    result.contents = dom.querySelector(fragment);                                                                    // 571\n                                                                                                                      // 572\n    return result;                                                                                                    // 573\n  };                                                                                                                  // 574\n                                                                                                                      // 575\n  var parseXHR = function (xhr, options) {                                                                            // 576\n    var head;                                                                                                         // 577\n    var body;                                                                                                         // 578\n    var data = {};                                                                                                    // 579\n    var responseText = xhr.responseText;                                                                              // 580\n                                                                                                                      // 581\n    data.url = options.url;                                                                                           // 582\n                                                                                                                      // 583\n    if (!responseText) {                                                                                              // 584\n      return data;                                                                                                    // 585\n    }                                                                                                                 // 586\n                                                                                                                      // 587\n    if (/<html/i.test(responseText)) {                                                                                // 588\n      head           = document.createElement('div');                                                                 // 589\n      body           = document.createElement('div');                                                                 // 590\n      head.innerHTML = responseText.match(/<head[^>]*>([\\s\\S.]*)<\\/head>/i)[0];                                       // 591\n      body.innerHTML = responseText.match(/<body[^>]*>([\\s\\S.]*)<\\/body>/i)[0];                                       // 592\n    } else {                                                                                                          // 593\n      head           = body = document.createElement('div');                                                          // 594\n      head.innerHTML = responseText;                                                                                  // 595\n    }                                                                                                                 // 596\n                                                                                                                      // 597\n    data.title = head.querySelector('title');                                                                         // 598\n    var text = 'innerText' in data.title ? 'innerText' : 'textContent';                                               // 599\n    data.title = data.title && data.title[text].trim();                                                               // 600\n                                                                                                                      // 601\n    if (options.transition) {                                                                                         // 602\n      data = extendWithDom(data, '.content', body);                                                                   // 603\n    } else {                                                                                                          // 604\n      data.contents = body;                                                                                           // 605\n    }                                                                                                                 // 606\n                                                                                                                      // 607\n    return data;                                                                                                      // 608\n  };                                                                                                                  // 609\n                                                                                                                      // 610\n                                                                                                                      // 611\n  // Attach PUSH event handlers                                                                                       // 612\n  // ==========================                                                                                       // 613\n                                                                                                                      // 614\n  window.addEventListener('touchstart', function () { isScrolling = false; });                                        // 615\n  window.addEventListener('touchmove', function () { isScrolling = true; });                                          // 616\n  window.addEventListener('touchend', touchend);                                                                      // 617\n  window.addEventListener('click', function (e) { if (getTarget(e)) {e.preventDefault();} });                         // 618\n  window.addEventListener('popstate', popstate);                                                                      // 619\n  window.PUSH = PUSH;                                                                                                 // 620\n                                                                                                                      // 621\n}());                                                                                                                 // 622\n                                                                                                                      // 623\n/* ========================================================================                                           // 624\n * Ratchet: segmented-controllers.js v2.0.2                                                                           // 625\n * http://goratchet.com/components#segmentedControls                                                                  // 626\n * ========================================================================                                           // 627\n * Copyright 2014 Connor Sears                                                                                        // 628\n * Licensed under MIT (https://github.com/twbs/ratchet/blob/master/LICENSE)                                           // 629\n * ======================================================================== */                                        // 630\n                                                                                                                      // 631\n!(function () {                                                                                                       // 632\n  'use strict';                                                                                                       // 633\n                                                                                                                      // 634\n  var getTarget = function (target) {                                                                                 // 635\n    var i;                                                                                                            // 636\n    var segmentedControls = document.querySelectorAll('.segmented-control .control-item');                            // 637\n                                                                                                                      // 638\n    for (; target && target !== document; target = target.parentNode) {                                               // 639\n      for (i = segmentedControls.length; i--;) {                                                                      // 640\n        if (segmentedControls[i] === target) {                                                                        // 641\n          return target;                                                                                              // 642\n        }                                                                                                             // 643\n      }                                                                                                               // 644\n    }                                                                                                                 // 645\n  };                                                                                                                  // 646\n                                                                                                                      // 647\n  window.addEventListener('touchend', function (e) {                                                                  // 648\n    var activeTab;                                                                                                    // 649\n    var activeBodies;                                                                                                 // 650\n    var targetBody;                                                                                                   // 651\n    var targetTab     = getTarget(e.target);                                                                          // 652\n    var className     = 'active';                                                                                     // 653\n    var classSelector = '.' + className;                                                                              // 654\n                                                                                                                      // 655\n    if (!targetTab) {                                                                                                 // 656\n      return;                                                                                                         // 657\n    }                                                                                                                 // 658\n                                                                                                                      // 659\n    activeTab = targetTab.parentNode.querySelector(classSelector);                                                    // 660\n                                                                                                                      // 661\n    if (activeTab) {                                                                                                  // 662\n      activeTab.classList.remove(className);                                                                          // 663\n    }                                                                                                                 // 664\n                                                                                                                      // 665\n    targetTab.classList.add(className);                                                                               // 666\n                                                                                                                      // 667\n    if (!targetTab.hash) {                                                                                            // 668\n      return;                                                                                                         // 669\n    }                                                                                                                 // 670\n                                                                                                                      // 671\n    targetBody = document.querySelector(targetTab.hash);                                                              // 672\n                                                                                                                      // 673\n    if (!targetBody) {                                                                                                // 674\n      return;                                                                                                         // 675\n    }                                                                                                                 // 676\n                                                                                                                      // 677\n    activeBodies = targetBody.parentNode.querySelectorAll(classSelector);                                             // 678\n                                                                                                                      // 679\n    for (var i = 0; i < activeBodies.length; i++) {                                                                   // 680\n      activeBodies[i].classList.remove(className);                                                                    // 681\n    }                                                                                                                 // 682\n                                                                                                                      // 683\n    targetBody.classList.add(className);                                                                              // 684\n  });                                                                                                                 // 685\n                                                                                                                      // 686\n  window.addEventListener('click', function (e) { if (getTarget(e.target)) {e.preventDefault();} });                  // 687\n}());                                                                                                                 // 688\n                                                                                                                      // 689\n/* ========================================================================                                           // 690\n * Ratchet: sliders.js v2.0.2                                                                                         // 691\n * http://goratchet.com/components#sliders                                                                            // 692\n * ========================================================================                                           // 693\n   Adapted from Brad Birdsall's swipe                                                                                 // 694\n * Copyright 2014 Connor Sears                                                                                        // 695\n * Licensed under MIT (https://github.com/twbs/ratchet/blob/master/LICENSE)                                           // 696\n * ======================================================================== */                                        // 697\n                                                                                                                      // 698\n!(function () {                                                                                                       // 699\n  'use strict';                                                                                                       // 700\n                                                                                                                      // 701\n  var pageX;                                                                                                          // 702\n  var pageY;                                                                                                          // 703\n  var slider;                                                                                                         // 704\n  var deltaX;                                                                                                         // 705\n  var deltaY;                                                                                                         // 706\n  var offsetX;                                                                                                        // 707\n  var lastSlide;                                                                                                      // 708\n  var startTime;                                                                                                      // 709\n  var resistance;                                                                                                     // 710\n  var sliderWidth;                                                                                                    // 711\n  var slideNumber;                                                                                                    // 712\n  var isScrolling;                                                                                                    // 713\n  var scrollableArea;                                                                                                 // 714\n                                                                                                                      // 715\n  var getSlider = function (target) {                                                                                 // 716\n    var i;                                                                                                            // 717\n    var sliders = document.querySelectorAll('.slider > .slide-group');                                                // 718\n                                                                                                                      // 719\n    for (; target && target !== document; target = target.parentNode) {                                               // 720\n      for (i = sliders.length; i--;) {                                                                                // 721\n        if (sliders[i] === target) {                                                                                  // 722\n          return target;                                                                                              // 723\n        }                                                                                                             // 724\n      }                                                                                                               // 725\n    }                                                                                                                 // 726\n  };                                                                                                                  // 727\n                                                                                                                      // 728\n  var getScroll = function () {                                                                                       // 729\n    if ('webkitTransform' in slider.style) {                                                                          // 730\n      var translate3d = slider.style.webkitTransform.match(/translate3d\\(([^,]*)/);                                   // 731\n      var ret = translate3d ? translate3d[1] : 0;                                                                     // 732\n      return parseInt(ret, 10);                                                                                       // 733\n    }                                                                                                                 // 734\n  };                                                                                                                  // 735\n                                                                                                                      // 736\n  var setSlideNumber = function (offset) {                                                                            // 737\n    var round = offset ? (deltaX < 0 ? 'ceil' : 'floor') : 'round';                                                   // 738\n    slideNumber = Math[round](getScroll() / (scrollableArea / slider.children.length));                               // 739\n    slideNumber += offset;                                                                                            // 740\n    slideNumber = Math.min(slideNumber, 0);                                                                           // 741\n    slideNumber = Math.max(-(slider.children.length - 1), slideNumber);                                               // 742\n  };                                                                                                                  // 743\n                                                                                                                      // 744\n  var onTouchStart = function (e) {                                                                                   // 745\n    slider = getSlider(e.target);                                                                                     // 746\n                                                                                                                      // 747\n    if (!slider) {                                                                                                    // 748\n      return;                                                                                                         // 749\n    }                                                                                                                 // 750\n                                                                                                                      // 751\n    var firstItem  = slider.querySelector('.slide');                                                                  // 752\n                                                                                                                      // 753\n    scrollableArea = firstItem.offsetWidth * slider.children.length;                                                  // 754\n    isScrolling    = undefined;                                                                                       // 755\n    sliderWidth    = slider.offsetWidth;                                                                              // 756\n    resistance     = 1;                                                                                               // 757\n    lastSlide      = -(slider.children.length - 1);                                                                   // 758\n    startTime      = +new Date();                                                                                     // 759\n    pageX          = e.touches[0].pageX;                                                                              // 760\n    pageY          = e.touches[0].pageY;                                                                              // 761\n    deltaX         = 0;                                                                                               // 762\n    deltaY         = 0;                                                                                               // 763\n                                                                                                                      // 764\n    setSlideNumber(0);                                                                                                // 765\n                                                                                                                      // 766\n    slider.style['-webkit-transition-duration'] = 0;                                                                  // 767\n  };                                                                                                                  // 768\n                                                                                                                      // 769\n  var onTouchMove = function (e) {                                                                                    // 770\n    if (e.touches.length > 1 || !slider) {                                                                            // 771\n      return; // Exit if a pinch || no slider                                                                         // 772\n    }                                                                                                                 // 773\n                                                                                                                      // 774\n    deltaX = e.touches[0].pageX - pageX;                                                                              // 775\n    deltaY = e.touches[0].pageY - pageY;                                                                              // 776\n    pageX  = e.touches[0].pageX;                                                                                      // 777\n    pageY  = e.touches[0].pageY;                                                                                      // 778\n                                                                                                                      // 779\n    if (typeof isScrolling === 'undefined') {                                                                         // 780\n      isScrolling = Math.abs(deltaY) > Math.abs(deltaX);                                                              // 781\n    }                                                                                                                 // 782\n                                                                                                                      // 783\n    if (isScrolling) {                                                                                                // 784\n      return;                                                                                                         // 785\n    }                                                                                                                 // 786\n                                                                                                                      // 787\n    offsetX = (deltaX / resistance) + getScroll();                                                                    // 788\n                                                                                                                      // 789\n    e.preventDefault();                                                                                               // 790\n                                                                                                                      // 791\n    resistance = slideNumber === 0         && deltaX > 0 ? (pageX / sliderWidth) + 1.25 :                             // 792\n                 slideNumber === lastSlide && deltaX < 0 ? (Math.abs(pageX) / sliderWidth) + 1.25 : 1;                // 793\n                                                                                                                      // 794\n    slider.style.webkitTransform = 'translate3d(' + offsetX + 'px,0,0)';                                              // 795\n  };                                                                                                                  // 796\n                                                                                                                      // 797\n  var onTouchEnd = function (e) {                                                                                     // 798\n    if (!slider || isScrolling) {                                                                                     // 799\n      return;                                                                                                         // 800\n    }                                                                                                                 // 801\n                                                                                                                      // 802\n    setSlideNumber(                                                                                                   // 803\n      (+new Date()) - startTime < 1000 && Math.abs(deltaX) > 15 ? (deltaX < 0 ? -1 : 1) : 0                           // 804\n    );                                                                                                                // 805\n                                                                                                                      // 806\n    offsetX = slideNumber * sliderWidth;                                                                              // 807\n                                                                                                                      // 808\n    slider.style['-webkit-transition-duration'] = '.2s';                                                              // 809\n    slider.style.webkitTransform = 'translate3d(' + offsetX + 'px,0,0)';                                              // 810\n                                                                                                                      // 811\n    e = new CustomEvent('slide', {                                                                                    // 812\n      detail: { slideNumber: Math.abs(slideNumber) },                                                                 // 813\n      bubbles: true,                                                                                                  // 814\n      cancelable: true                                                                                                // 815\n    });                                                                                                               // 816\n                                                                                                                      // 817\n    slider.parentNode.dispatchEvent(e);                                                                               // 818\n  };                                                                                                                  // 819\n                                                                                                                      // 820\n  window.addEventListener('touchstart', onTouchStart);                                                                // 821\n  window.addEventListener('touchmove', onTouchMove);                                                                  // 822\n  window.addEventListener('touchend', onTouchEnd);                                                                    // 823\n                                                                                                                      // 824\n}());                                                                                                                 // 825\n                                                                                                                      // 826\n/* ========================================================================                                           // 827\n * Ratchet: toggles.js v2.0.2                                                                                         // 828\n * http://goratchet.com/components#toggles                                                                            // 829\n * ========================================================================                                           // 830\n   Adapted from Brad Birdsall's swipe                                                                                 // 831\n * Copyright 2014 Connor Sears                                                                                        // 832\n * Licensed under MIT (https://github.com/twbs/ratchet/blob/master/LICENSE)                                           // 833\n * ======================================================================== */                                        // 834\n                                                                                                                      // 835\n!(function () {                                                                                                       // 836\n  'use strict';                                                                                                       // 837\n                                                                                                                      // 838\n  var start     = {};                                                                                                 // 839\n  var touchMove = false;                                                                                              // 840\n  var distanceX = false;                                                                                              // 841\n  var toggle    = false;                                                                                              // 842\n                                                                                                                      // 843\n  var findToggle = function (target) {                                                                                // 844\n    var i;                                                                                                            // 845\n    var toggles = document.querySelectorAll('.toggle');                                                               // 846\n                                                                                                                      // 847\n    for (; target && target !== document; target = target.parentNode) {                                               // 848\n      for (i = toggles.length; i--;) {                                                                                // 849\n        if (toggles[i] === target) {                                                                                  // 850\n          return target;                                                                                              // 851\n        }                                                                                                             // 852\n      }                                                                                                               // 853\n    }                                                                                                                 // 854\n  };                                                                                                                  // 855\n                                                                                                                      // 856\n  window.addEventListener('touchstart', function (e) {                                                                // 857\n    e = e.originalEvent || e;                                                                                         // 858\n                                                                                                                      // 859\n    toggle = findToggle(e.target);                                                                                    // 860\n                                                                                                                      // 861\n    if (!toggle) {                                                                                                    // 862\n      return;                                                                                                         // 863\n    }                                                                                                                 // 864\n                                                                                                                      // 865\n    var handle      = toggle.querySelector('.toggle-handle');                                                         // 866\n    var toggleWidth = toggle.clientWidth;                                                                             // 867\n    var handleWidth = handle.clientWidth;                                                                             // 868\n    var offset      = toggle.classList.contains('active') ? (toggleWidth - handleWidth) : 0;                          // 869\n                                                                                                                      // 870\n    start     = { pageX : e.touches[0].pageX - offset, pageY : e.touches[0].pageY };                                  // 871\n    touchMove = false;                                                                                                // 872\n  });                                                                                                                 // 873\n                                                                                                                      // 874\n  window.addEventListener('touchmove', function (e) {                                                                 // 875\n    e = e.originalEvent || e;                                                                                         // 876\n                                                                                                                      // 877\n    if (e.touches.length > 1) {                                                                                       // 878\n      return; // Exit if a pinch                                                                                      // 879\n    }                                                                                                                 // 880\n                                                                                                                      // 881\n    if (!toggle) {                                                                                                    // 882\n      return;                                                                                                         // 883\n    }                                                                                                                 // 884\n                                                                                                                      // 885\n    var handle      = toggle.querySelector('.toggle-handle');                                                         // 886\n    var current     = e.touches[0];                                                                                   // 887\n    var toggleWidth = toggle.clientWidth;                                                                             // 888\n    var handleWidth = handle.clientWidth;                                                                             // 889\n    var offset      = toggleWidth - handleWidth;                                                                      // 890\n                                                                                                                      // 891\n    touchMove = true;                                                                                                 // 892\n    distanceX = current.pageX - start.pageX;                                                                          // 893\n                                                                                                                      // 894\n    if (Math.abs(distanceX) < Math.abs(current.pageY - start.pageY)) {                                                // 895\n      return;                                                                                                         // 896\n    }                                                                                                                 // 897\n                                                                                                                      // 898\n    e.preventDefault();                                                                                               // 899\n                                                                                                                      // 900\n    if (distanceX < 0) {                                                                                              // 901\n      return (handle.style.webkitTransform = 'translate3d(0,0,0)');                                                   // 902\n    }                                                                                                                 // 903\n    if (distanceX > offset) {                                                                                         // 904\n      return (handle.style.webkitTransform = 'translate3d(' + offset + 'px,0,0)');                                    // 905\n    }                                                                                                                 // 906\n                                                                                                                      // 907\n    handle.style.webkitTransform = 'translate3d(' + distanceX + 'px,0,0)';                                            // 908\n                                                                                                                      // 909\n    toggle.classList[(distanceX > (toggleWidth / 2 - handleWidth / 2)) ? 'add' : 'remove']('active');                 // 910\n  });                                                                                                                 // 911\n                                                                                                                      // 912\n  window.addEventListener('touchend', function (e) {                                                                  // 913\n    if (!toggle) {                                                                                                    // 914\n      return;                                                                                                         // 915\n    }                                                                                                                 // 916\n                                                                                                                      // 917\n    var handle      = toggle.querySelector('.toggle-handle');                                                         // 918\n    var toggleWidth = toggle.clientWidth;                                                                             // 919\n    var handleWidth = handle.clientWidth;                                                                             // 920\n    var offset      = (toggleWidth - handleWidth);                                                                    // 921\n    var slideOn     = (!touchMove && !toggle.classList.contains('active')) || (touchMove && (distanceX > (toggleWidth / 2 - handleWidth / 2)));\n                                                                                                                      // 923\n    if (slideOn) {                                                                                                    // 924\n      handle.style.webkitTransform = 'translate3d(' + offset + 'px,0,0)';                                             // 925\n    } else {                                                                                                          // 926\n      handle.style.webkitTransform = 'translate3d(0,0,0)';                                                            // 927\n    }                                                                                                                 // 928\n                                                                                                                      // 929\n    toggle.classList[slideOn ? 'add' : 'remove']('active');                                                           // 930\n                                                                                                                      // 931\n    e = new CustomEvent('toggle', {                                                                                   // 932\n      detail: { isActive: slideOn },                                                                                  // 933\n      bubbles: true,                                                                                                  // 934\n      cancelable: true                                                                                                // 935\n    });                                                                                                               // 936\n                                                                                                                      // 937\n    toggle.dispatchEvent(e);                                                                                          // 938\n                                                                                                                      // 939\n    touchMove = false;                                                                                                // 940\n    toggle    = false;                                                                                                // 941\n  });                                                                                                                 // 942\n                                                                                                                      // 943\n}());                                                                                                                 // 944\n                                                                                                                      // 945\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/axw:ratchet/ratchet-2/js/ratchet.min.js                                                                   //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/*!                                                                                                                   // 1\n * =====================================================                                                              // 2\n * Ratchet v2.0.2 (http://goratchet.com)                                                                              // 3\n * Copyright 2014 Connor Sears                                                                                        // 4\n * Licensed under MIT (https://github.com/twbs/ratchet/blob/master/LICENSE)                                           // 5\n *                                                                                                                    // 6\n * v2.0.2 designed by @connors.                                                                                       // 7\n * =====================================================                                                              // 8\n */                                                                                                                   // 9\n!function(){\"use strict\";var a=function(a){for(var b,c=document.querySelectorAll(\"a\");a&&a!==document;a=a.parentNode)for(b=c.length;b--;)if(c[b]===a)return a},b=function(b){var c=a(b.target);return c&&c.hash?document.querySelector(c.hash):void 0};window.addEventListener(\"touchend\",function(a){var c=b(a);c&&(c&&c.classList.contains(\"modal\")&&c.classList.toggle(\"active\"),a.preventDefault())})}(),!function(){\"use strict\";var a,b=function(a){for(var b,c=document.querySelectorAll(\"a\");a&&a!==document;a=a.parentNode)for(b=c.length;b--;)if(c[b]===a)return a},c=function(){a.style.display=\"none\",a.removeEventListener(\"webkitTransitionEnd\",c)},d=function(){var b=document.createElement(\"div\");return b.classList.add(\"backdrop\"),b.addEventListener(\"touchend\",function(){a.addEventListener(\"webkitTransitionEnd\",c),a.classList.remove(\"visible\"),a.parentNode.removeChild(d)}),b}(),e=function(c){var d=b(c.target);if(d&&d.hash&&!(d.hash.indexOf(\"/\")>0)){try{a=document.querySelector(d.hash)}catch(e){a=null}if(null!==a&&a&&a.classList.contains(\"popover\"))return a}},f=function(a){var b=e(a);b&&(b.style.display=\"block\",b.offsetHeight,b.classList.add(\"visible\"),b.parentNode.appendChild(d))};window.addEventListener(\"touchend\",f)}(),!function(){\"use strict\";var a,b=function(){},c=20,d=sessionStorage,e={},f={slideIn:\"slide-out\",slideOut:\"slide-in\",fade:\"fade\"},g={bartab:\".bar-tab\",barnav:\".bar-nav\",barfooter:\".bar-footer\",barheadersecondary:\".bar-header-secondary\"},h=function(a,b){o.id=a.id,b&&(a=k(a.id)),d[a.id]=JSON.stringify(a),window.history.replaceState(a.id,a.title,a.url),e[a.id]=document.body.cloneNode(!0)},i=function(){var a=o.id,b=JSON.parse(d.cacheForwardStack||\"[]\"),e=JSON.parse(d.cacheBackStack||\"[]\");for(e.push(a);b.length;)delete d[b.shift()];for(;e.length>c;)delete d[e.shift()];window.history.pushState(null,\"\",d[o.id].url),d.cacheForwardStack=JSON.stringify(b),d.cacheBackStack=JSON.stringify(e)},j=function(a,b){var c=\"forward\"===b,e=JSON.parse(d.cacheForwardStack||\"[]\"),f=JSON.parse(d.cacheBackStack||\"[]\"),g=c?f:e,h=c?e:f;o.id&&g.push(o.id),h.pop(),d.cacheForwardStack=JSON.stringify(e),d.cacheBackStack=JSON.stringify(f)},k=function(a){return JSON.parse(d[a]||null)||{}},l=function(b){var c=t(b.target);if(!(!c||b.which>1||b.metaKey||b.ctrlKey||a||location.protocol!==c.protocol||location.host!==c.host||!c.hash&&/#/.test(c.href)||c.hash&&c.href.replace(c.hash,\"\")===location.href.replace(location.hash,\"\")||\"push\"===c.getAttribute(\"data-ignore\")))return c},m=function(a){var b=l(a);b&&(a.preventDefault(),o({url:b.href,hash:b.hash,timeout:b.getAttribute(\"data-timeout\"),transition:b.getAttribute(\"data-transition\")}))},n=function(a){var b,c,h,i,l,m,n,p,q=a.state;if(q&&d[q]){if(l=o.id<q?\"forward\":\"back\",j(q,l),h=k(q),i=e[q],h.title&&(document.title=h.title),\"back\"===l?(n=JSON.parse(\"back\"===l?d.cacheForwardStack:d.cacheBackStack),p=k(n[n.length-1])):p=h,\"back\"===l&&!p.id)return o.id=q;if(m=\"back\"===l?f[p.transition]:p.transition,!i)return o({id:h.id,url:h.url,title:h.title,timeout:h.timeout,transition:m,ignorePush:!0});if(p.transition){h=v(h,\".content\",i.cloneNode(!0));for(b in g)g.hasOwnProperty(b)&&(c=document.querySelector(g[b]),h[b]?r(h[b],c):c&&c.parentNode.removeChild(c))}r((h.contents||i).cloneNode(!0),document.querySelector(\".content\"),m),o.id=q,document.body.offsetHeight}},o=function(a){var c,d=o.xhr;a.container=a.container||a.transition?document.querySelector(\".content\"):document.body;for(c in g)g.hasOwnProperty(c)&&(a[c]=a[c]||document.querySelector(g[c]));d&&d.readyState<4&&(d.onreadystatechange=b,d.abort()),d=new XMLHttpRequest,d.open(\"GET\",a.url,!0),d.setRequestHeader(\"X-PUSH\",\"true\"),d.onreadystatechange=function(){a._timeout&&clearTimeout(a._timeout),4===d.readyState&&(200===d.status?p(d,a):q(a.url))},o.id||h({id:+new Date,url:window.location.href,title:document.title,timeout:a.timeout,transition:null}),a.timeout&&(a._timeout=setTimeout(function(){d.abort(\"timeout\")},a.timeout)),d.send(),d.readyState&&!a.ignorePush&&i()},p=function(a,b){var c,d,e=w(a,b);if(!e.contents)return u(b.url);if(e.title&&(document.title=e.title),b.transition)for(c in g)g.hasOwnProperty(c)&&(d=document.querySelector(g[c]),e[c]?r(e[c],d):d&&d.parentNode.removeChild(d));r(e.contents,b.container,b.transition,function(){h({id:b.id||+new Date,url:e.url,title:e.title,timeout:b.timeout,transition:b.transition},b.id),s()}),!b.ignorePush&&window._gaq&&_gaq.push([\"_trackPageview\"]),!b.hash},q=function(a){throw new Error(\"Could not get: \"+a)},r=function(a,b,c,d){var e,f,g;if(c?(e=/in$/.test(c),\"fade\"===c&&(b.classList.add(\"in\"),b.classList.add(\"fade\"),a.classList.add(\"fade\")),/slide/.test(c)&&(a.classList.add(\"sliding-in\",e?\"right\":\"left\"),a.classList.add(\"sliding\"),b.classList.add(\"sliding\")),b.parentNode.insertBefore(a,b)):b?b.innerHTML=a.innerHTML:a.classList.contains(\"content\")?document.body.appendChild(a):document.body.insertBefore(a,document.querySelector(\".content\")),c||d&&d(),\"fade\"===c){b.offsetWidth,b.classList.remove(\"in\");var h=function(){b.removeEventListener(\"webkitTransitionEnd\",h),a.classList.add(\"in\"),a.addEventListener(\"webkitTransitionEnd\",i)},i=function(){a.removeEventListener(\"webkitTransitionEnd\",i),b.parentNode.removeChild(b),a.classList.remove(\"fade\"),a.classList.remove(\"in\"),d&&d()};b.addEventListener(\"webkitTransitionEnd\",h)}if(/slide/.test(c)){var j=function(){a.removeEventListener(\"webkitTransitionEnd\",j),a.classList.remove(\"sliding\",\"sliding-in\"),a.classList.remove(g),b.parentNode.removeChild(b),d&&d()};b.offsetWidth,g=e?\"right\":\"left\",f=e?\"left\":\"right\",b.classList.add(f),a.classList.remove(g),a.addEventListener(\"webkitTransitionEnd\",j)}},s=function(){var a=new CustomEvent(\"push\",{detail:{state:k(o.id)},bubbles:!0,cancelable:!0});window.dispatchEvent(a)},t=function(a){for(var b,c=document.querySelectorAll(\"a\");a&&a!==document;a=a.parentNode)for(b=c.length;b--;)if(c[b]===a)return a},u=function(a){window.history.replaceState(null,\"\",\"#\"),window.location.replace(a)},v=function(a,b,c){var d,e={};for(d in a)a.hasOwnProperty(d)&&(e[d]=a[d]);return Object.keys(g).forEach(function(a){var b=c.querySelector(g[a]);b&&b.parentNode.removeChild(b),e[a]=b}),e.contents=c.querySelector(b),e},w=function(a,b){var c,d,e={},f=a.responseText;if(e.url=b.url,!f)return e;/<html/i.test(f)?(c=document.createElement(\"div\"),d=document.createElement(\"div\"),c.innerHTML=f.match(/<head[^>]*>([\\s\\S.]*)<\\/head>/i)[0],d.innerHTML=f.match(/<body[^>]*>([\\s\\S.]*)<\\/body>/i)[0]):(c=d=document.createElement(\"div\"),c.innerHTML=f),e.title=c.querySelector(\"title\");var g=\"innerText\"in e.title?\"innerText\":\"textContent\";return e.title=e.title&&e.title[g].trim(),b.transition?e=v(e,\".content\",d):e.contents=d,e};window.addEventListener(\"touchstart\",function(){a=!1}),window.addEventListener(\"touchmove\",function(){a=!0}),window.addEventListener(\"touchend\",m),window.addEventListener(\"click\",function(a){l(a)&&a.preventDefault()}),window.addEventListener(\"popstate\",n),window.PUSH=o}(),!function(){\"use strict\";var a=function(a){for(var b,c=document.querySelectorAll(\".segmented-control .control-item\");a&&a!==document;a=a.parentNode)for(b=c.length;b--;)if(c[b]===a)return a};window.addEventListener(\"touchend\",function(b){var c,d,e,f=a(b.target),g=\"active\",h=\".\"+g;if(f&&(c=f.parentNode.querySelector(h),c&&c.classList.remove(g),f.classList.add(g),f.hash&&(e=document.querySelector(f.hash)))){d=e.parentNode.querySelectorAll(h);for(var i=0;i<d.length;i++)d[i].classList.remove(g);e.classList.add(g)}}),window.addEventListener(\"click\",function(b){a(b.target)&&b.preventDefault()})}(),!function(){\"use strict\";var a,b,c,d,e,f,g,h,i,j,k,l,m,n=function(a){for(var b,c=document.querySelectorAll(\".slider > .slide-group\");a&&a!==document;a=a.parentNode)for(b=c.length;b--;)if(c[b]===a)return a},o=function(){if(\"webkitTransform\"in c.style){var a=c.style.webkitTransform.match(/translate3d\\(([^,]*)/),b=a?a[1]:0;return parseInt(b,10)}},p=function(a){var b=a?0>d?\"ceil\":\"floor\":\"round\";k=Math[b](o()/(m/c.children.length)),k+=a,k=Math.min(k,0),k=Math.max(-(c.children.length-1),k)},q=function(f){if(c=n(f.target)){var k=c.querySelector(\".slide\");m=k.offsetWidth*c.children.length,l=void 0,j=c.offsetWidth,i=1,g=-(c.children.length-1),h=+new Date,a=f.touches[0].pageX,b=f.touches[0].pageY,d=0,e=0,p(0),c.style[\"-webkit-transition-duration\"]=0}},r=function(h){h.touches.length>1||!c||(d=h.touches[0].pageX-a,e=h.touches[0].pageY-b,a=h.touches[0].pageX,b=h.touches[0].pageY,\"undefined\"==typeof l&&(l=Math.abs(e)>Math.abs(d)),l||(f=d/i+o(),h.preventDefault(),i=0===k&&d>0?a/j+1.25:k===g&&0>d?Math.abs(a)/j+1.25:1,c.style.webkitTransform=\"translate3d(\"+f+\"px,0,0)\"))},s=function(a){c&&!l&&(p(+new Date-h<1e3&&Math.abs(d)>15?0>d?-1:1:0),f=k*j,c.style[\"-webkit-transition-duration\"]=\".2s\",c.style.webkitTransform=\"translate3d(\"+f+\"px,0,0)\",a=new CustomEvent(\"slide\",{detail:{slideNumber:Math.abs(k)},bubbles:!0,cancelable:!0}),c.parentNode.dispatchEvent(a))};window.addEventListener(\"touchstart\",q),window.addEventListener(\"touchmove\",r),window.addEventListener(\"touchend\",s)}(),!function(){\"use strict\";var a={},b=!1,c=!1,d=!1,e=function(a){for(var b,c=document.querySelectorAll(\".toggle\");a&&a!==document;a=a.parentNode)for(b=c.length;b--;)if(c[b]===a)return a};window.addEventListener(\"touchstart\",function(c){if(c=c.originalEvent||c,d=e(c.target)){var f=d.querySelector(\".toggle-handle\"),g=d.clientWidth,h=f.clientWidth,i=d.classList.contains(\"active\")?g-h:0;a={pageX:c.touches[0].pageX-i,pageY:c.touches[0].pageY},b=!1}}),window.addEventListener(\"touchmove\",function(e){if(e=e.originalEvent||e,!(e.touches.length>1)&&d){var f=d.querySelector(\".toggle-handle\"),g=e.touches[0],h=d.clientWidth,i=f.clientWidth,j=h-i;if(b=!0,c=g.pageX-a.pageX,!(Math.abs(c)<Math.abs(g.pageY-a.pageY))){if(e.preventDefault(),0>c)return f.style.webkitTransform=\"translate3d(0,0,0)\";if(c>j)return f.style.webkitTransform=\"translate3d(\"+j+\"px,0,0)\";f.style.webkitTransform=\"translate3d(\"+c+\"px,0,0)\",d.classList[c>h/2-i/2?\"add\":\"remove\"](\"active\")}}}),window.addEventListener(\"touchend\",function(a){if(d){var e=d.querySelector(\".toggle-handle\"),f=d.clientWidth,g=e.clientWidth,h=f-g,i=!b&&!d.classList.contains(\"active\")||b&&c>f/2-g/2;e.style.webkitTransform=i?\"translate3d(\"+h+\"px,0,0)\":\"translate3d(0,0,0)\",d.classList[i?\"add\":\"remove\"](\"active\"),a=new CustomEvent(\"toggle\",{detail:{isActive:i},bubbles:!0,cancelable:!0}),d.dispatchEvent(a),b=!1,d=!1}})}();\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}