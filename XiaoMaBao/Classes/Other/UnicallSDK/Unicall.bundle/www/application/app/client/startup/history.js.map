{"version":3,"sources":["meteor://ðŸ’»app/client/startup/history.js"],"names":[],"mappings":";;;;;;;;;;;;AAIA,CAAC,YAAY;AACX,MAAI,KAAK,GAAG,YAAU;AACpB,QAAI,WAAW,GAAG,CAAC,CAAC;;AAEpB,QAAI,cAAc,GAAG,IAAI,CAAC;AAC1B,QAAI,QAAQ,GAAG,SAAS,CAAC;AACzB,QAAI,SAAS,GAAG,IAAI,CAAC;AACrB,QAAI,OAAO,GAAG,KAAK,CAAC;AACpB,QAAI,OAAO,GAAG,KAAK,CAAC;AACpB,QAAI,CAAC,IAAI,GAAC,UAAS,KAAK,EAAC;AACvB,aAAO,CAAC,GAAG,CAAC,yBAAyB,GAAC,IAAI,IAAI,EAAE,CAAC,CAAC;AAClD,aAAO,CAAC,GAAG,CAAC,gBAAgB,GAAC,WAAW,CAAC,CAAC;AAC1C,aAAO,CAAC,GAAG,CAAC,cAAc,GAAC,SAAS,CAAC,CAAC;AACtC,UAAG,SAAS,KAAK,IAAI,IAAE,OAAO,KAAK,KAAK,EAAC;AACvC,eAAO,GAAG,IAAI,CAAC;AACf,eAAO,CAAC,GAAG,CAAC,gBAAgB,EAAC,SAAS,CAAC,CAAC;;AAExC,cAAM,CAAC,IAAI,CAAC,gDAAgD,EAAC,QAAQ,EAAC,cAAc,EAAC,WAAW,EAAC,UAAS,CAAC,EAAC,CAAC,EAAC;AAC5G,cAAG,CAAC,EACF,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KACb;;AAEF,gBAAG,cAAc,KAAK,IAAI,EACxB,cAAc,GAAG,CAAC,CAAC,EAAE,CAAC;AACxB,gBAAG,CAAC,CAAC,OAAO,KAAK,KAAK,EAAC;AACrB,uBAAS,GAAC,KAAK,CAAC;AAChB,qBAAO,CAAC,GAAG,CAAC,gBAAgB,EAAC,QAAQ,CAAC,CAAC;aACxC;AACD,aAAC,CAAC,OAAO,CAAC,OAAO,CAAC,UAAS,MAAM,EAAC;AAChC,yBAAW,CAAC,MAAM,CAAC;AACjB,mBAAG,EAAE,MAAM,CAAC,GAAG;eAChB,EAAE,MAAM,CAAC,CAAC;aACZ,CAAC;AACF,uBAAW,EAAE,CAAC;WACf;AACD,cAAG,KAAK,EACN,KAAK,CAAC,SAAS,CAAC,CAAC;;AAEnB,iBAAO,GAAG,KAAK,CAAC;SACjB,CAAC;OACH,MAAI;;;OAGJ;KACF,CAAC;AACF,QAAI,CAAC,KAAK,GAAC,UAAS,KAAK,EAAC;AACxB,UAAG,OAAO,KAAK,KAAK,EAAC;AACnB,gBAAQ,GAAG,KAAK,CAAC;AACjB,YAAI,CAAC,IAAI,CAAC,YAAU;AAClB,iBAAO,GAAG,IAAI,CAAC;SAChB,CAAC,CAAC;OACJ;KAEF;GACF;AACD,MAAI,KAAK,GAAG,IAAI,CAAC;AACjB,MAAG,MAAM,CAAC,IAAI,EAAE,EAAC;AACf,SAAK,CAAC,WAAW,GAAC,IAAI,KAAK,EAAE,CAAC;AAC9B,eAAW,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,CAAC;GAC3C,MACC,QAAQ,CAAC,OAAO,CAAC,YAAU;AACzB,SAAK,CAAC,WAAW,GAAC,IAAI,KAAK,EAAE,CAAC;AAC9B,eAAW,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,CAAC;GAC3C,CAAC,CAAC;CAEN,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,2D","file":"/client/startup/history.js","sourcesContent":["/**\n * Created by lil on 16-3-8.\n */\n// Generated by CoffeeScript 1.10.0\n(function () {\n  var clazz = function(){\n    var currentPage = 1;\n    //TimeSync not ready yet\n    var clientInitTime = null;\n    var username = undefined;\n    var hasRecord = true;\n    var loading = false;\n    var started = false;\n    this.load=function(after){\n      console.log(\"trigger load history ->\"+new Date());\n      console.log(\"currentPage ->\"+currentPage);\n      console.log(\"hasRecord ->\"+hasRecord);\n      if(hasRecord === true&&loading === false){\n        loading = true;\n        Session.set('refresh-notice','loading');\n        //default page size is 20 set by server\n        Meteor.call('loadMessagesByVisitorUserNameByEndTimeLivechat',username,clientInitTime,currentPage,function(e,r){\n          if(e)\n            console.log(e);\n          else{\n            //if clientInitTime is null,server will return new date of server as ct\n            if(clientInitTime === null)\n              clientInitTime = r.ct;\n            if(r.hasMore === false){\n              hasRecord=false;\n              Session.set('refresh-notice','loaded');\n            }\n            r.records.forEach(function(record){\n              ChatMessage.upsert({\n                _id: record._id\n              }, record);\n            })\n            currentPage++;\n          }\n          if(after)\n            after(hasRecord);\n          //at last\n          loading = false;\n        })\n      }else{\n        //if(after)\n        //  after();\n      }\n    };\n    this.start=function(uname){\n      if(started === false){\n        username = uname;\n        this.load(function(){\n          started = true;\n        });\n      }\n\n    }\n  }\n  var stage = this;\n  if(Meteor.user()){\n    stage.CharRecords=new clazz();\n    CharRecords.start(Meteor.user().username);\n  }else\n    Accounts.onLogin(function(){\n      stage.CharRecords=new clazz();\n      CharRecords.start(Meteor.user().username);\n    });\n\n}).call(this);\n"]}